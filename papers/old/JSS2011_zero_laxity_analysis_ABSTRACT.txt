It has been widely studied how to schedule real-time tasks on multiprocessor platforms. Several studies have developed optimal scheduling policies for implicit deadline task systems. So far however, studies have failed to develop effective scheduling strategies for more general task systems such as constrained deadline tasks. We argue that a narrow focus on deadline satisfaction (urgency) is the primary reason for this lack of success. In particular, few studies have considered the impact on scheduling of the restriction that a job cannot simultaneously execute on more than one core (parallelism). In this paper we look at one such simple, but effective, characterization of urgency and parallelism ? the zero laxity first policy (ZL policy). We study in detail how beneficial the ZL policy is to schedulability. We then develop an improved schedulability test for any algorithm that employs the ZL policy, and prove that the test dominates previously known tests. Our simulation results show that the improved ZL schedulability test outperforms the existing ones